<launch>
    <arg name="is_model_floating_base" type="bool" value="false"/>
    <arg name="use_goal_generator" type="bool" value="false"/>
    
    <param name="robot_description" textfile="$(find centauro)/centauro_urdf/urdf/simple_model.urdf"/>
    <param name="robot_description_semantic" textfile="$(find centauro)/centauro_srdf/srdf/simple_model.srdf"/>
    
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
    <node pkg="cartesio_planning" type="state_publisher" name="state_publisher"/>
    
    <!-- start planner -->  
    <node pkg="cartesio_planning" type="planning_server" name="planning_server" output="screen">
        <remap from="planner/goal/joint_states" to="cartesian/solution"/>
        <param name="solver" value=""/>
        <param name="is_model_floating_base" value="$(arg is_model_floating_base)"/>
        <param name="use_goal_generator" value="$(arg use_goal_generator)"/>
        <param name="planner_config"
        textfile="$(find cartesio_planning)/configs/problem/SE2_config.yaml"/>
    </node> 
    
    <node pkg="cartesio_planning" type="previewer" name="planner_previewer" output="screen">
        <param name="is_model_floating_base" value="$(arg is_model_floating_base)"/>
    </node>
    
    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_world"
        args="0 0 0. 0 0 0 world planner/world 30"/>

    <!-- This is needed to connect robot_start marker with "world" frame -->
    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_start"
        args="0 0 0. 0 0 0 world planner/start/world 30"/>
  
    <!-- This is needed to connect robot_goal marker with "world" frame -->
    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_goal"
        args="0 0 0. 0 0 0 world planner/goal/world 30"/>
    
    <node name="mesh_viz_floor" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="1."/>
        <param name="scale_y" type="double" value="4.0"/>
        <param name="scale_z" type="double" value=".2"/>
        <rosparam param="position"> [1.5, 0.0, 0.1] </rosparam>
        <rosparam param="orientation"> [0.0, 0.0, 0.0, 1.0] </rosparam>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor"/>
        <param name="show_control_axis" type="bool" value="True"/>
        <remap from="mesh_viz_floor/floor" to="planner/collision_objects"/>
    </node>
    
    <!-- Planning scene -->
    <node pkg="cartesio_planning" type="planning_scene_publisher" name="planning_scene_publisher" output="screen"/> 
  
    
    <node pkg="rviz" type="rviz" name="rviz" 
        args="-d $(find cartesio_planning)/configs/rviz/SE2_model.rviz" output="screen"/>
    
</launch>