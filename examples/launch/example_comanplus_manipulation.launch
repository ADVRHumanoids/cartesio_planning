<launch>

    <arg name="solver" default="OpenSot"/>
    <arg name="prefix" default=""/>
    <arg name="use_goal_generator" default="false"/>
    <arg name="world_frame_link" default="l_sole"/>
    <arg name="gazebo" default="false"/>

    <env name="MATLOGGER_DISABLE_LOG" value="1"/>


    <param name="robot_description"
        textfile="$(find cogimon_urdf)/urdf/cogimon.urdf"/>

    <param name="robot_description_semantic"
        textfile="$(find cogimon_srdf)/srdf/cogimon.srdf"/>

    <param name="arc_description"
        textfile="$(find multi_contact_planning)/utils/urdf/arc.urdf"/>

    <param name="planner/problem_description_constraint"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_constraint_stack.yaml"/>

    <param name="cartesian/problem_description"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_goal_generation_stack.yaml"/>

    <param name="planner/problem_description_goal"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_goal_generation_stack.yaml"/>


    <node pkg="cartesio_planning" type="planning_server" name="planning_server" output="screen">
        <!--remap from="planner/goal/joint_states" to="cartesian/solution"/-->
        <param name="solver" value=""/>
        <param name="is_model_floating_base" value="true"/>
        <param name="use_goal_generator" value="$(arg use_goal_generator)"/>
        <param name="planner_config"
            textfile="$(find cartesio_planning)/configs/problem/comanplus_example_manipulation_config.yaml"/>
        <param name="world_frame_link" value="$(arg world_frame_link)"/>
        <param name="eps" value="5e-2"/>
    </node>

    <node pkg="cartesio_planning" type="planning_scene_publisher" name="planning_scene_publisher" output="screen"/>

    <node pkg="cartesio_planning" type="previewer" name="planner_previewer" output="screen">
	<param name="is_model_floating_base" value="true"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_start"
        args="0 0 0 0 0 0 world planner/start/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_goal"
        args="0 0 0 0 0 0 world planner/goal/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_playback"
        args="0 0 0 0 0 0 world planner/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_ci"
        args="0 0 0 0 0 0 world ci/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_goal_sampler"
        args="0 0 0 0 0 0 world planner/goal_sampler/world 30"/>
    
    <node pkg="tf" type="static_transform_publisher" name="world_connecter_solution"
        args="0 0 0 0 0 0 world solution/world 30"/>
        
    <node pkg="tf" type="static_transform_publisher" name="world_connecter_NSPG"
        args="0 0 0 0 0 0 world NSPG/world 30"/>

    <node type="rviz" name="rviz" pkg="rviz"
        args="-d $(find cartesio_planning)/configs/rviz/example_comanplus_manipulation.rviz" output="screen"/>
    
    <node if="$(arg use_goal_generator)" pkg="cartesian_interface" type="marker_spawner" name="goal_marker_spawner" output="screen">
        <param name="ns" value="planner/goal_sampler"/>
        <param name="tf_prefix" value="planner/goal_sampler"/>
    </node>
    
    <!--include unless="$(arg use_goal_generator)" file="$(find cartesian_interface)/launch/cartesio.launch">
        <arg name="tf_prefix" value="ci"/>
        <arg name="world_frame_link" value="$(arg world_frame_link)"/>
    </include-->

    <!--<include if="$(arg gazebo)" file="$(find cartesian_interface)/launch/cartesio.launch">
        <param name="visual_mode" value="true"/>
    </include>-->
    <group if="$(arg gazebo)">
        <node pkg="gazebo_ros" type="gazebo" name="gazebo"
            args="$(env ROBOTOLOGY_ROOT)/external/soap_bar_rrt/multi_contact_planning/examples/configs/world/cogimon_no_wall.world -namespace arc"/>

        <node pkg="gazebo_ros" type="spawn_model" name="arc_spawner" respawn="false" output="screen"
            args="-urdf -model arc -param arc_description"/>

        <node pkg="multi_contact_planning" name="xbot_mode_handler" type="xbot_mode_handler.py"
              output="screen" launch-prefix="bash -c 'sleep 5.0; $0 $@' "/>

        <include file="$(find cartesio_planning)/launch/forza_giusta.launch"/>
    </group>

    <node name="mesh_viz_floor" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="0.3"/>
        <param name="scale_y" type="double" value="0.05"/>
        <param name="scale_z" type="double" value="1.0"/>
        <rosparam param="position"> [0.7, 0.55, 0.5] </rosparam>
        <rosparam param="orientation"> [0.0, 0.0, 0.0, 1.0] </rosparam>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <remap from="mesh_viz_floor/floor" to="planner/collision_objects"/>
    </node>

    <node name="mesh_viz_floor1" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="0.3"/>
        <param name="scale_y" type="double" value="0.05"/>
        <param name="scale_z" type="double" value="1.0"/>
        <rosparam param="position"> [0.7, -0.55, 0.5] </rosparam>
        <rosparam param="orientation"> [0.0, 0.0, 0.0, 1.0] </rosparam>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor1"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <remap from="mesh_viz_floor/floor1" to="planner/collision_objects"/>
    </node>

    <node name="mesh_viz_floor2" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="0.3"/>
        <param name="scale_y" type="double" value="1.15"/>
        <param name="scale_z" type="double" value="0.05"/>
        <rosparam param="position"> [0.7, 0., 1.0] </rosparam>
        <rosparam param="orientation"> [0.0, 0.0, 0.0, 1.0] </rosparam>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor2"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <remap from="mesh_viz_floor/floor2" to="planner/collision_objects"/>
    </node>

    <node name="mesh_viz_floor3" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="0.05"/>
        <param name="scale_y" type="double" value="1.15"/>
        <param name="scale_z" type="double" value="2.0"/>
        <rosparam param="position"> [2.025, 0., 1.0] </rosparam>
        <rosparam param="orientation"> [0.0, 0.0, 0.0, 1.0] </rosparam>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor3"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <remap from="mesh_viz_floor/floor3" to="planner/collision_objects"/>
    </node>

</launch>
