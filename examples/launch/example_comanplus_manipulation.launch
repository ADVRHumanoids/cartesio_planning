<launch>

    <arg name="solver" default="OpenSot"/>
    <arg name="prefix" default=""/>
    <arg name="use_goal_generator" default="false"/>
    <arg name="world_frame_link" default="base_link"/>


    <param name="robot_description"
        textfile="$(find cogimon_urdf)/urdf/cogimon.urdf"/>

    <param name="robot_description_semantic"
        textfile="$(find cogimon_srdf)/srdf/cogimon.srdf"/>

    <param name="planner/problem_description_constraint"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_constraint_stack.yaml"/>

    <param name="cartesian/problem_description"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_goal_generation_stack.yaml"/>

    <param name="planner/problem_description_goal"
        textfile="$(find cartesio_planning)/configs/problem/comanplus_goal_generation_stack.yaml"/>


    <node pkg="cartesio_planning" type="planning_server" name="planning_server" output="screen">
        <remap from="planner/start/joint_states" to="cartesian/solution"/>
        <param name="solver" value=""/>
        <param name="is_model_floating_base" value="true"/>
        <param name="use_goal_generator" value="$(arg use_goal_generator)"/>
        <param name="planner_config"
            textfile="$(find cartesio_planning)/configs/problem/comanplus_example_manipulation_config.yaml"/>
        <param name="world_frame_link" value="$(arg world_frame_link)"/>
        <rosparam param="base_links">['base_link']</rosparam>
        <rosparam param="distal_links">['l_sole']</rosparam>
    </node>

    <node pkg="cartesio_planning" type="planning_scene_publisher" name="planning_scene_publisher" output="screen"/>

    <node pkg="cartesio_planning" type="previewer" name="planner_previewer" output="screen"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_start"
        args="0 0 0 0 0 0 world planner/start/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_goal"
        args="0 0 0 0 0 0 world planner/goal/world 30"/>

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_playback"
        args="0 0 0 0 0 0 world planner/world 30"/>

    <!--<node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_ci"
        args="0 0 0 0 0 0 world ci/world 30"/> -->

    <node pkg="tf" type="static_transform_publisher" name="world_connecter_planner_goal_sampler"
        args="0 0 0 0 0 0 world planner/goal_sampler/world 30"/>

    <node type="rviz" name="rviz" pkg="rviz"
        args="-d $(find cartesio_planning)/configs/rviz/example_comanplus_manipulation.rviz" output="screen"/>
    
    <node if="$(arg use_goal_generator)" pkg="cartesian_interface" type="marker_spawner" name="goal_marker_spawner" output="screen">
        <param name="ns" value="planner/goal_sampler"/>
        <param name="tf_prefix" value="planner/goal_sampler"/>
    </node>

    <!--include unless="$(arg use_goal_generator)" file="$(find cartesian_interface)/launch/cartesio.launch">
        <arg name="tf_prefix" value="ci"/>
        <arg name="world_frame_link" value="$(arg world_frame_link)"/>
    </include-->

  <node name="mesh_viz_floor" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value="2."/>
        <param name="scale_y" type="double" value="1.5"/>
        <param name="scale_z" type="double" value=".1"/>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="floor"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <rosparam param="position">[0.165824, 0., -1.02294]</rosparam>
        <rosparam param="orientation">[1.17151e-09, 0.0192186, -5.05542e-11, 0.999816]</rosparam>
        <remap from="mesh_viz_floor/floor" to="planner/collision_objects"/>
  </node>

  <node name="mesh_viz_wall" pkg="mesh_viz" type="mesh_viz_node" output="screen">
        <param name="mesh_path" value="$(find cartesio_planning)/utils/simple_box.stl" />
        <param name="scale_x" type="double" value=".1"/>
        <param name="scale_y" type="double" value="1.5"/>
        <param name="scale_z" type="double" value="1.5"/>
        <param name="frame_id" value="world"/>
        <param name="name_id" value="wall"/>
        <param name="show_control_axis" type="bool" value="False"/>
        <rosparam param="position">[-0.594725, 0., -0.27293]</rosparam>
        <rosparam param="orientation">[-2.48178e-10, -0.00436655, -3.31116e-11, 0.99999]</rosparam>
        <remap from="mesh_viz_wall/wall" to="planner/collision_objects"/>
  </node>

</launch>
